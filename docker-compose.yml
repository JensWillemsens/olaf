version: '3.7'

# #################################################################
# #                            GENERAL                            #
# #################################################################

# Service template
x-service:
    image: example:latest
    container_name: example
    hostname: example
    restart: always
    command:
      - "--example"
    ports:
      - 9999:9999
    networks:
      - example-network
    depends-on:
      - example-db
    volumes:
      - ./example-source:/example-source
    environment:
      - "TZ=${DEFAULT_TIMEZONE}"
    labels:
      example-label: example
    healthcheck:
      test: ["CMD-SHELL", "example || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

# #################################################################
# #                            SERVICES                           #
# #################################################################
services:
# =========================
# =         PROXY         =
# =========================
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    command:
      # - "--log.level=DEBUG"
      - "--providers.file.directory=/conf"
      - "--providers.file.watch=true"
      - "--providers.docker=true"
      - "--providers.docker.defaultRule="
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.middlewares=SecureHttps@file"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.le-tls.acme.tlsChallenge=true"
      - "--certificatesresolvers.le-tls.acme.email=${ADMIN_MAIL}"
      - "--certificatesresolvers.le-tls.acme.storage=/letsencrypt/acme.json"
      - "--api=true"
      - "--ping.manualrouting=true"
    ports:
      - 80:80
      - 443:443
    networks:
      - traefik
      - frontend-transmission
      - frontend-minio
    volumes:
      - ./conf/traefik:/conf
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-cert:/letsencrypt/
    environment:
      - "TZ=${DEFAULT_TIMEZONE}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.rule=Host(`traefik-${HOSTNAME}.${DEFAULT_DOMAIN}`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.middlewares.api-auth.basicauth.users=${TRAEFIK_API_USER}"
      - "traefik.http.routers.api.middlewares=api-auth"
      - "traefik.http.routers.api.tls.certresolver=le-tls"
      - "traefik.http.routers.ping.entrypoints=websecure"
      - "traefik.http.routers.ping.rule=Host(`ping-${HOSTNAME}.${DEFAULT_DOMAIN}`)"
      - "traefik.http.routers.ping.service=ping@internal"
      - "traefik.http.routers.ping.tls.certresolver=le-tls"

# =========================
# =    Cloudflare DDNS    =
# =========================
  cloudflare-ddns:
    image: oznu/cloudflare-ddns:latest
    container_name: cloudflare-ddns
    restart: always
    environment:
      - "TZ=${DEFAULT_TIMEZONE}"
      - EMAIL=${CF_EMAIL}
      - API_KEY=${CF_API_KEY}
      - ZONE=${CF_ZONE}
      - SUBDOMAIN=${CF_SUBDOMAIN}
    dns:
      - 1.1.1.1
      - 1.0.0.1

# =========================
# =     AUTO-UPDATER      =
# =========================
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 4 * * *" --cleanup
    environment:
      - "TZ=${DEFAULT_TIMEZONE}"

# =========================
# =        TORRENT        =
# =========================
  transmission:
    image: linuxserver/transmission:latest
    container_name: transmission
    restart: always
    networks:
      - frontend-transmission
    ports:
      - "51413:51413"
      - "51413:51413/udp"
    environment:
      - PUID=233
      - PGID=233
      - TZ=Europe/Brussels
      - TRANSMISSION_WEB_HOME=/combustion-release/
      - USER=${TRANSMISSION_USER}
      - PASS=${TRANSMISSION_PASSWORD}
    volumes:
      - "/media/data/services/transmission/:/downloads/incomplete"
      - "/media/data/media/000. Plex/Nazien:/downloads/complete"
      - "${PATH_APPDATA}/transmission:/config"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend-transmission"
      - "traefik.http.routers.torrent.entrypoints=websecure"
      - "traefik.http.routers.torrent.rule=Host(`torrent.${DEFAULT_DOMAIN}`)"
      - "traefik.http.routers.torrent.tls.certresolver=le-tls"
      - "traefik.http.services.torrent.loadbalancer.server.port=9091"

# =========================
# =         SAMBA         =
# =========================
  samba:
    image: dperson/samba:latest
    container_name: samba
    restart: always
    networks:
      - samba
    ports:
      - "${LOCAL_IP}:139:139"
      - "${LOCAL_IP}:445:445"
    volumes:
      - /media/data/media:/mnt/media
    environment:
      - "TZ=${DEFAULT_TIMEZONE}"
      - USERID=233
      - GROUPID=233
    command: samba.sh -S -u "nas;${SAMBA_PW_NAS}" -u "scanner;${SAMBA_PW_SCANNER}" -s "media;/mnt/media;yes;no;no;nas" -s "scans;/mnt/media/Scans;yes;no;no;scanner"

# =========================
# =          PLEX         =
# =========================
  plex:
    image: plexinc/pms-docker:latest
    container_name: plex
    restart: always
    network_mode: "host"
    volumes:
      - "/media/data/media/000. Plex:/data/media"
      - "/media/data/services/plex/optimized:/data/optimized"
      - "${PATH_APPDATA}/plex/config:/config"
      - "${PATH_APPDATA}/plex/transcode:/transcode"
    environment:
      - "TZ=${DEFAULT_TIMEZONE}"
      - PLEX_CLAIM=${PLEX_CLAIM}
      - PLEX_UID=233
      - PLEX_GID=233
      - ADVERTISE_IP=${PLEX_IP}

# =========================
# =   TINY MEDIA MANAGER  =
# =========================
  tmm:
    image: romancin/tinymediamanager:latest
    container_name: tmm
    restart: always
    networks:
      - traefik
    volumes:
      - "/media/data/media/000. Plex:/media"
      - "${PATH_APPDATA}/tmm/config:/config"
    environment:
      - "TZ=${DEFAULT_TIMEZONE}"
      - "GROUP_ID=0"
      - "USER_ID=0"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.middlewares.tmm-auth.basicauth.users=${TMM_USER}"
      - "traefik.http.routers.tmm.entrypoints=websecure"
      - "traefik.http.routers.tmm.rule=Host(`tmm.${DEFAULT_DOMAIN}`)"
      - "traefik.http.routers.tmm.middlewares=tmm-auth"
      - "traefik.http.routers.tmm.tls.certresolver=le-tls"
      - "traefik.http.services.tmm.loadbalancer.server.port=5800"

# =========================
# =         MINIO         =
# =========================
  minio:
    image: minio/minio:latest
    container_name: minio
    restart: always
    command: server /data
    networks:
      - frontend-minio
    volumes:
      - "/media/data/services/minio:/data"
    environment:
      - "TZ=${DEFAULT_TIMEZONE}"
      - "MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}"
      - "MINIO_SECRET_KEY=${MINIO_SECRET_KEY}"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend-minio"
      - "traefik.http.routers.minio.entrypoints=websecure"
      - "traefik.http.routers.minio.rule=Host(`minio-${HOSTNAME}.${DEFAULT_DOMAIN}`)"
      - "traefik.http.routers.minio.tls.certresolver=le-tls"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

# =========================
# =      BORG SERVER      =
# =========================
  borgserver:
    image: nold360/borgserver:latest
    container_name: borgserver
    restart: always
    ports:
      - "2222:22"
    volumes:
      - "/media/data/services/borgserver:/backup"
      - ./conf/borgserver:/sshkeys
    environment:
      - "TZ=${DEFAULT_TIMEZONE}"

# =========================
# =         BACKUP        =
# =========================
  borgmatic:
    image: b3vis/borgmatic:latest
    container_name: borgmatic
    restart: always
    volumes:
      # Backup locations
      - "/media/data/media/000. Plex/Photos:/mnt/source/plex/photos:ro"
      # Config and cache
      - ./conf/borgmatic/borgmatic.d:/etc/borgmatic.d
      - ./conf/borgmatic/ssh:/root/.ssh
      - "${PATH_APPDATA}/borgmatic/config:/root/.config/borg"
      - "${PATH_APPDATA}/borgmatic/cache:/root/.cache/borg"
      - "${PATH_APPDATA}/borgmatic/restore:/mnt/restore"
    environment:
      - "TZ=${DEFAULT_TIMEZONE}"
      - "BORG_PASSPHRASE=${BORG_PASSPHRASE}"
      - "MAIL_RELAY_HOST=${MAIL_HOSTNAME}"
      - "MAIL_PORT=${MAIL_PORT}"
      - "MAIL_USER=${MAIL_USER}"
      - "MAIL_PASSWORD=${MAIL_PW}"
      - "MAIL_FROM=pumba.borgmatic"

# #################################################################
# #                            VOLUMES                            #
# #################################################################
volumes:
  traefik-cert:

# #################################################################
# #                            NETWORKS                           #
# #################################################################
networks:
  traefik:
    name: traefik

  frontend-transmission:
    name: frontend-transmission

  frontend-minio:
    name: frontend-minio

  samba:
    name: samba
